"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[451],{4938:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>r,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=t(5893),s=t(1151);const o={title:"Install Spawn",sidebar_label:"Install Spawn",sidebar_position:2,slug:"/install/install-spawn"},l="Overview",i={id:"setup/install-spawn",title:"Install Spawn",description:"Install the Spawn CLI tool to your local machine",source:"@site/versioned_docs/version-v0.50.x/01-setup/02-install-spawn.md",sourceDirName:"01-setup",slug:"/install/install-spawn",permalink:"/spawn/v0.50/install/install-spawn",draft:!1,unlisted:!1,tags:[],version:"v0.50.x",sidebarPosition:2,frontMatter:{title:"Install Spawn",sidebar_label:"Install Spawn",sidebar_position:2,slug:"/install/install-spawn"},sidebar:"defaultSidebar",previous:{title:"System Setup",permalink:"/spawn/v0.50/install/system-setup"},next:{title:"Debugging",permalink:"/spawn/v0.50/install/debugging"}},r={},c=[{value:"Install Spawn",id:"install-spawn",level:2},{value:"Command not found error",id:"command-not-found-error",level:2}];function d(n){const e={admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h1,{id:"overview",children:"Overview"}),"\n",(0,a.jsx)(e.admonition,{title:"Synopsis",type:"note",children:(0,a.jsx)(e.p,{children:"Install the Spawn CLI tool to your local machine"})}),"\n",(0,a.jsx)(e.h2,{id:"install-spawn",children:"Install Spawn"}),"\n",(0,a.jsx)(e.p,{children:"Install Spawn from source."}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"# Install from latest source\ngit clone https://github.com/rollchains/spawn.git --depth 1 --branch v0.50.10\n\n# Change to this directory\ncd spawn\n\n# Clear Go modules cache for a fresh install\ngo clean -modcache\n\n# Install Spawn\nmake install\n\n# Install Local Interchain (testnet runner)\nmake get-localic\n\n# Install docker container builder\nmake get-heighliner\n\n# Verify installations were successful\nspawn\n\nlocal-ic\n\nheighliner\n"})}),"\n",(0,a.jsx)(e.h2,{id:"command-not-found-error",children:"Command not found error"}),"\n",(0,a.jsx)(e.p,{children:"If you get \"command 'spawn' not found\", run:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:'# Gets your operating system\nunameOut="$(uname -s)"\ncase "${unameOut}" in\n    Linux*)     machine=Linux;;\n    Darwin*)    machine=Mac;;\n    CYGWIN*)    machine=Cygwin;;\n    MINGW*)     machine=MinGw;;\n    MSYS_NT*)   machine=MSys;;\n    *)          machine="UNKNOWN:${unameOut}"\nesac\necho "Your operating system is: $machine"\necho -e "\\nAdding the go binary location to your PATH for global access.\\n\\tIt will now prompt you for your password."\n\n# Adds the location of the binaries to your PATH for global execution.\ncmd=\'export PATH=$PATH:$(go env GOPATH)/bin\'\nif [ $machine == "Linux" ]; then\n    sudo echo "$cmd" >> ~/.bashrc && source ~/.bashrc\nelif [ $machine == "Mac" ]; then\n    sudo echo "$cmd" >> ~/.zshrc && source ~/.zshrc\nelse\n    echo \'Please add the following to your PATH: $(go env GOPATH)/bin\'\nfi\n'})})]})}function u(n={}){const{wrapper:e}={...(0,s.a)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(d,{...n})}):d(n)}},1151:(n,e,t)=>{t.d(e,{Z:()=>i,a:()=>l});var a=t(7294);const s={},o=a.createContext(s);function l(n){const e=a.useContext(o);return a.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:l(n.components),a.createElement(o.Provider,{value:e},n.children)}}}]);